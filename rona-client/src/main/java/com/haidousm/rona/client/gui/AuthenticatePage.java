package com.haidousm.rona.client.gui;

import com.haidousm.rona.client.client.Client;
import com.haidousm.rona.client.controllers.ClientController;
import com.haidousm.rona.common.enums.Status;
import com.haidousm.rona.common.responses.TokenResponse;

import javax.swing.*;
import java.awt.*;
import java.io.File;
import java.nio.file.Path;
import java.nio.file.Paths;

public class AuthenticatePage extends JFrame {
    private JTextField usernameTextField;
    private JPasswordField passwordTextField;
    private JButton loginButton;
    private JButton registerButton;
    private JPanel mainPanel;
    private JButton uploadImageButton;
    private JCheckBox isVaccinatedCheckbox;
    private JButton uploadPDFButton;
    private JTextField emailTextField;
    private JTextField firstNameTextField;
    private JTextField lastNameTextField;
    private JPasswordField registerPasswordTextField;
    private JTextField registerUsernameTextField;

    private Path imageFilePath = Paths.get("");
    private Path pdfFilePath = Paths.get("");

    private final Client client;

    public AuthenticatePage(String title, Client client) {
        super(title);
        setContentPane(mainPanel);
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        pack();

        setLocationRelativeTo(null);

        this.client = client;

        isVaccinatedCheckbox.addActionListener(e -> uploadPDFButton.setEnabled(isVaccinatedCheckbox.isSelected()));

        loginButton.addActionListener(e -> loginClicked());

        registerButton.addActionListener(e -> registerClicked());

        uploadImageButton.addActionListener(e -> {
            JFileChooser fileChooser = new JFileChooser();
            fileChooser.setCurrentDirectory(new File("."));
            fileChooser.setDialogTitle("Select an image");
            fileChooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
            fileChooser.setAcceptAllFileFilterUsed(false);
            if (fileChooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
                imageFilePath = fileChooser.getSelectedFile().toPath();
            }
        });

        uploadPDFButton.addActionListener(e -> {
            JFileChooser fileChooser = new JFileChooser();
            fileChooser.setCurrentDirectory(new File("."));
            fileChooser.setDialogTitle("Select a PDF");
            fileChooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
            fileChooser.setAcceptAllFileFilterUsed(false);
            if (fileChooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
                pdfFilePath = fileChooser.getSelectedFile().toPath();
            }
        });

    }

    private void loginClicked() {
        String username = usernameTextField.getText();
        String password = new String(passwordTextField.getPassword());
        TokenResponse response = ClientController.login(client, username, password);
        if (response.getStatus() == Status.SUCCESS) {
            client.setToken(response.getToken());
            goToHome(client);
        } else {
            JOptionPane.showMessageDialog(this, "Login failed");
        }
    }

    private void registerClicked() {
        String username = registerUsernameTextField.getText();
        String password = new String(registerPasswordTextField.getPassword());
        String email = emailTextField.getText();
        String firstName = firstNameTextField.getText();
        String lastName = lastNameTextField.getText();
        boolean isVaccinated = isVaccinatedCheckbox.isSelected();
        TokenResponse response = ClientController.registerUser(client, firstName, lastName, email, username, password, isVaccinated, pdfFilePath, imageFilePath);
        if (response.getStatus() == Status.SUCCESS) {
            client.setToken(response.getToken());
            goToHome(client);
        } else {
            JOptionPane.showMessageDialog(this, "Register failed");
        }
    }

    private void goToHome(Client client) {
        dispose();
        HomePage homePage = new HomePage("Home", client);
        homePage.setVisible(true);
    }

    @Override
    public Insets getInsets() {
        return new Insets(10, 10, 10, 10);
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        mainPanel = new JPanel();
        mainPanel.setLayout(new GridBagLayout());
        final JLabel label1 = new JLabel();
        label1.setText("Username");
        GridBagConstraints gbc;
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 1;
        gbc.anchor = GridBagConstraints.WEST;
        mainPanel.add(label1, gbc);
        usernameTextField = new JTextField();
        usernameTextField.setText("");
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 1;
        gbc.weightx = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        mainPanel.add(usernameTextField, gbc);
        final JLabel label2 = new JLabel();
        label2.setText("Password");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 2;
        gbc.anchor = GridBagConstraints.WEST;
        mainPanel.add(label2, gbc);
        final JLabel label3 = new JLabel();
        label3.setText("Login");
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 0;
        gbc.weightx = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        mainPanel.add(label3, gbc);
        passwordTextField = new JPasswordField();
        passwordTextField.setText("");
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 2;
        gbc.weightx = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        mainPanel.add(passwordTextField, gbc);
        final JLabel label4 = new JLabel();
        label4.setText("First Name");
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 1;
        gbc.anchor = GridBagConstraints.WEST;
        mainPanel.add(label4, gbc);
        firstNameTextField = new JTextField();
        gbc = new GridBagConstraints();
        gbc.gridx = 3;
        gbc.gridy = 1;
        gbc.weightx = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        mainPanel.add(firstNameTextField, gbc);
        final JLabel label5 = new JLabel();
        label5.setText("Register");
        gbc = new GridBagConstraints();
        gbc.gridx = 3;
        gbc.gridy = 0;
        gbc.weightx = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        mainPanel.add(label5, gbc);
        final JLabel label6 = new JLabel();
        label6.setText("Last Name");
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 2;
        gbc.anchor = GridBagConstraints.WEST;
        mainPanel.add(label6, gbc);
        lastNameTextField = new JTextField();
        gbc = new GridBagConstraints();
        gbc.gridx = 3;
        gbc.gridy = 2;
        gbc.weightx = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        mainPanel.add(lastNameTextField, gbc);
        final JLabel label7 = new JLabel();
        label7.setText("Email");
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 3;
        gbc.anchor = GridBagConstraints.WEST;
        mainPanel.add(label7, gbc);
        emailTextField = new JTextField();
        gbc = new GridBagConstraints();
        gbc.gridx = 3;
        gbc.gridy = 3;
        gbc.weightx = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        mainPanel.add(emailTextField, gbc);
        final JLabel label8 = new JLabel();
        label8.setText("Password");
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 5;
        gbc.anchor = GridBagConstraints.WEST;
        mainPanel.add(label8, gbc);
        registerPasswordTextField = new JPasswordField();
        gbc = new GridBagConstraints();
        gbc.gridx = 3;
        gbc.gridy = 5;
        gbc.weightx = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        mainPanel.add(registerPasswordTextField, gbc);
        loginButton = new JButton();
        loginButton.setText("Login");
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 3;
        gbc.weightx = 1.0;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        mainPanel.add(loginButton, gbc);
        registerButton = new JButton();
        registerButton.setText("Register");
        gbc = new GridBagConstraints();
        gbc.gridx = 3;
        gbc.gridy = 9;
        gbc.weightx = 1.0;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        mainPanel.add(registerButton, gbc);
        final JLabel label9 = new JLabel();
        label9.setText("Profile Image");
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 6;
        gbc.anchor = GridBagConstraints.WEST;
        mainPanel.add(label9, gbc);
        uploadImageButton = new JButton();
        uploadImageButton.setText("Upload Image");
        gbc = new GridBagConstraints();
        gbc.gridx = 3;
        gbc.gridy = 6;
        gbc.weightx = 1.0;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        mainPanel.add(uploadImageButton, gbc);
        final JLabel label10 = new JLabel();
        label10.setText("Vaccinated?");
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 7;
        gbc.anchor = GridBagConstraints.WEST;
        mainPanel.add(label10, gbc);
        isVaccinatedCheckbox = new JCheckBox();
        isVaccinatedCheckbox.setText("");
        gbc = new GridBagConstraints();
        gbc.gridx = 3;
        gbc.gridy = 7;
        gbc.weightx = 1.0;
        mainPanel.add(isVaccinatedCheckbox, gbc);
        final JLabel label11 = new JLabel();
        label11.setText("Vaccine Certificate");
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 8;
        gbc.anchor = GridBagConstraints.WEST;
        mainPanel.add(label11, gbc);
        uploadPDFButton = new JButton();
        uploadPDFButton.setEnabled(false);
        uploadPDFButton.setText("Upload PDF");
        gbc = new GridBagConstraints();
        gbc.gridx = 3;
        gbc.gridy = 8;
        gbc.weightx = 1.0;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        mainPanel.add(uploadPDFButton, gbc);
        final JLabel label12 = new JLabel();
        label12.setText("Username");
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 4;
        gbc.anchor = GridBagConstraints.WEST;
        mainPanel.add(label12, gbc);
        registerUsernameTextField = new JTextField();
        gbc = new GridBagConstraints();
        gbc.gridx = 3;
        gbc.gridy = 4;
        gbc.weightx = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        mainPanel.add(registerUsernameTextField, gbc);
        usernameTextField.setNextFocusableComponent(label2);
        label2.setNextFocusableComponent(label3);
        firstNameTextField.setNextFocusableComponent(label6);
        lastNameTextField.setNextFocusableComponent(label7);
        emailTextField.setNextFocusableComponent(label12);
        registerPasswordTextField.setNextFocusableComponent(uploadImageButton);
        registerUsernameTextField.setNextFocusableComponent(label8);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return mainPanel;
    }

}
